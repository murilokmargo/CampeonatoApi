// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20211028015943_TCP")]
    partial class TCP
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.CampeonatoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Campeonato");
                });

            modelBuilder.Entity("Domain.Entities.PartidaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CampeonatoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CampeonatoId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GolTimeA")
                        .HasColumnType("int");

                    b.Property<int>("GolTimeB")
                        .HasColumnType("int");

                    b.Property<Guid>("TimeAId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TimeBId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CampeonatoId");

                    b.HasIndex("CampeonatoId1");

                    b.HasIndex("TimeAId");

                    b.HasIndex("TimeBId");

                    b.ToTable("Partida");
                });

            modelBuilder.Entity("Domain.Entities.TimeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Time");
                });

            modelBuilder.Entity("Domain.Entities.PartidaEntity", b =>
                {
                    b.HasOne("Domain.Entities.CampeonatoEntity", null)
                        .WithMany("Partidas")
                        .HasForeignKey("CampeonatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.CampeonatoEntity", "Campeonato")
                        .WithMany()
                        .HasForeignKey("CampeonatoId1");

                    b.HasOne("Domain.Entities.TimeEntity", "TimeA")
                        .WithMany("TimesA")
                        .HasForeignKey("TimeAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TimeEntity", "TimeB")
                        .WithMany("TimesB")
                        .HasForeignKey("TimeBId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campeonato");

                    b.Navigation("TimeA");

                    b.Navigation("TimeB");
                });

            modelBuilder.Entity("Domain.Entities.CampeonatoEntity", b =>
                {
                    b.Navigation("Partidas");
                });

            modelBuilder.Entity("Domain.Entities.TimeEntity", b =>
                {
                    b.Navigation("TimesA");

                    b.Navigation("TimesB");
                });
#pragma warning restore 612, 618
        }
    }
}
